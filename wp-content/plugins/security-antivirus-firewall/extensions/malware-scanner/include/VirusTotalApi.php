<?php
/*  
 * Security Antivirus Firewall (wpTools S.A.F.)
 * http://wptools.co/wordpress-security-antivirus-firewall
 * Version:           	2.1.23
 * Build:             	34569
 * Author:            	WpTools
 * Author URI:        	http://wptools.co
 * License:           	License: GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
 * Date:              	Tue, 17 Jan 2017 18:05:12 GMT
 */

if ( ! defined( 'WPINC' ) )  die;
if ( ! defined( 'ABSPATH' ) ) exit;

class VirusTotalApi{
	const API_URL_SCAN = 'https://www.virustotal.com/vtapi/v2/file/scan';
	const API_URL_REPORT = 'https://www.virustotal.com/vtapi/v2/file/report';

	private $apiKey = '';
	protected $response = array();
	protected $error;
	protected $statusCode;

	function __construct($apiKey){
		$this->apiKey = $apiKey;
	}


	public function uploadFile($fileName){
		if (!file_exists($fileName)) {
			$this->error = "virustotal::uploadFile could not find the file specified: '{$fileName}'";
			return false;
		}

		$post_url = self::API_URL_SCAN . "?apikey={$this->apiKey}";
		if (function_exists('curl_file_create')) {
			$post['file'] = curl_file_create($fileName);
		} else { //
			$post['file'] = '@' . $fileName;
		}

		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $post_url);
		curl_setopt($ch, CURLOPT_HEADER, 0);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$api_reply = curl_exec($ch);
		$this->error = curl_error($ch);
		$this->statusCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
		curl_close($ch);

		if (!$api_reply) {
			return false;
		}

		$response = json_decode($api_reply, true);
		if (!$response) {
			$this->error = $api_reply;
		}

		return $response;
	}


	public function fetchReports(array $resources){
		$requestUrl = self::API_URL_REPORT . "?apikey={$this->apiKey}&resource=" . implode(',', $resources);
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $requestUrl);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$api_reply = curl_exec($ch);
		$this->error = curl_error($ch);
		$this->statusCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
		curl_close($ch);

		if (!$api_reply) {
			return false;
		}

		$response = json_decode($api_reply, true);
		if (!$response) {
			$this->error = $api_reply;
		}

		return 1 == count($resources) ? array($response) : $response;
	}


	public function getError(){
		return $this->error;
	}

	public function getStatusCode(){
		return $this->statusCode;
	}

}

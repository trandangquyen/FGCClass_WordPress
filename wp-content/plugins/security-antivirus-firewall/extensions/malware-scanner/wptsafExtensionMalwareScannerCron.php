<?php
/*  
 * Security Antivirus Firewall (wpTools S.A.F.)
 * http://wptools.co/wordpress-security-antivirus-firewall
 * Version:           	2.1.23
 * Build:             	34569
 * Author:            	WpTools
 * Author URI:        	http://wptools.co
 * License:           	License: GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
 * Date:              	Tue, 17 Jan 2017 18:05:12 GMT
 */

if ( ! defined( 'WPINC' ) )  die;
if ( ! defined( 'ABSPATH' ) ) exit;

class wptsafExtensionMalwareScannerCron extends wptsafExtensionCron{
	const FREQUENCY_RUN = '1H';

	protected $hookNameRunScan;

	public function __construct(wptsafAbstractExtension $extension){
		parent::__construct($extension);

		$this->hookNameRunScan = $this->generateHookName('run_scan');
		add_action($this->hookNameRunScan, array($this, 'runScan'));
	}

	function initSchedule(){
		parent::initSchedule();

		$this->addScheduleSingleEvent(
			$this->hookNameRunScan,
			self::FREQUENCY_RUN,
			0,
			0
		);
	}

	public function clearSchedule(){
		parent::clearSchedule();

		wp_clear_scheduled_hook($this->hookNameRunScan);
	}

	public function runScan(){
		if (!$this->extension->isEnabled()) {
			return;
		}

		$scanner = new wptsafExtensionMalwareScannerScanner($this->extension);

		if ($scanner->isNeedToProcess()) {
			$this->addScheduleSingleEvent(
				$this->hookNameRunScan,
				wptsafExtensionMalwareScannerScanner::REQUEST_LIMIT_TIME_FRAME . 'SEC'
			);
			$scanner->process();
		} else {
			$this->addScheduleSingleEvent($this->hookNameRunScan, self::FREQUENCY_RUN);
		}
	}
}
